name: cargo mpirun
version: "0.1"
author: Andrew Gaspar <andrew.gaspar@outlook.com>
about: >
    Run the main binary of the local package (src/main.rs) using mpirun.
after_help: >
    If neither `--bin` nor `--example` are given, then if the project only has
    one bin target it will be run. Otherwise `--bin` specifies the bin target
    to run, and `--example` specifies the example target to run. At most one of
    `--bin` or `--example` can be provided.


    All of the trailing arguments are passed to mpirun. If you're passing
    arguments to both Cargo and the binary, the ones after `--` go to mpirun,
    the ones before go to Cargo.
settings: [UnifiedHelpMessage, DeriveDisplayOrder]
args:
    - bin:
        long: bin
        value_name: NAME
        help: Name of the bin target to run
    - example:
        long: example
        value_name: NAME
        help: Name of the example target to run
    - package:
        short: p
        long: package
        value_name: NAME
        help: Package with the target to run
    - jobs:
        short: j
        long: jobs
        value_name: N
        help: "Number of parallel jobs, defaults to # of CPUs"
    - release:
        long: release
        help: Build artifacts in release mode, with optimizations
    - features:
        long: features
        value_name: FEATURE
        multiple: true
        help: Space-separated list of features to also build
    - all-features:
        long: all-features
        help: Build all available features
    - no-default-features:
        long: no-default-features
        help: Do not build the `default` feature
    - target:
        long: target
        value_name: TRIPLE
        help: Build for the target triple
    - manifest-path:
        long: manifest-path
        value_name: PATH
        help: Path to the manifest to execute
    - verbose:
        short: v
        long: verbose
        multiple: true
        help: Use verbose output (-vv very verbose/build.rs output)
    - quiet:
        short: q
        long: quiet
        help: No output printed to stdout
    - color:
        long: color
        value_name: WHEN
        possible_values: [auto, always, never]
        help: Coloring
    - message-format:
        long: message-format
        value_name: FMT
        possible_values: [human, json]
        default_value: human
        help: Error format
    - frozen:
        long: frozen
        help: Require Cargo.lock and cache are up to date
    - locked:
        long: locked
        help: Require Cargo.lock is up to date
    - Z:
        short: Z
        value_name: FLAG
        multiple: true
        help: Unstable (nightly-only) flags to Cargo